{"version":3,"sources":["components/smoothed-marker-tracker.js"],"names":["AFRAME","registerComponent","schema","adjustedRotation","type","default","x","y","z","init","el","object3D","isShown","setAttribute","onMarkerPositionUpdate","event","onMarkerRotationUpdate","onMarkerTrackingStarted","visible","onMarkerTrackingEnded","console","log","update","tick","remove","pause","play"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACAA,MAAM,CAACC,iBAAP,CAAyB,yBAAzB,EAAoD;AAClDC,EAAAA,MAAM,EAAE;AACNC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,IAAI,EAAE,MADU;AAEhBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE,CAAX;AAAcC,QAAAA,CAAC,EAAE;AAAjB;AAFO;AADZ,GAD0C;AAOlDC,EAAAA,IAAI,EAAE,YAAY;AAEhB,SAAKC,EAAL,CAAQC,QAAR,CAAiBC,OAAjB,GAA2B,KAA3B,CAFgB,CAGhB;;AACA,SAAKF,EAAL,CAAQG,YAAR,CAAqB,iBAArB,EAAwC,6FAAxC;AACA,SAAKH,EAAL,CAAQG,YAAR,CAAqB,iBAArB,EAAwC,6FAAxC;AAED,GAdiD;AAelDC,EAAAA,sBAAsB,EAAE,UAASC,KAAT,EAAgB,CAEtC;AACD,GAlBiD;AAmBlDC,EAAAA,sBAAsB,EAAE,UAASD,KAAT,EAAgB,CACtC;AACD,GArBiD;AAsBlDE,EAAAA,uBAAuB,EAAE,UAASF,KAAT,EAAgB;AACvC;AACA;AACA,SAAKL,EAAL,CAAQC,QAAR,CAAiBO,OAAjB,GAA2B,IAA3B,CAHuC,CAIvC;AACD,GA3BiD;AA4BlDC,EAAAA,qBAAqB,EAAE,UAASJ,KAAT,EAAgB;AACrCK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,SAAKX,EAAL,CAAQC,QAAR,CAAiBO,OAAjB,GAA2B,KAA3B,CAFqC,CAGrC;AACA;AACD,GAjCiD;AAkClDI,EAAAA,MAAM,EAAE,YAAY,CAAE,CAlC4B;AAmClDC,EAAAA,IAAI,EAAE,YAAY,CACjB,CApCiD;AAqClDC,EAAAA,MAAM,EAAE,YAAY,CAAE,CArC4B;AAsClDC,EAAAA,KAAK,EAAE,YAAY,CAAE,CAtC6B;AAuClDC,EAAAA,IAAI,EAAE,YAAY,CAAE;AAvC8B,CAApD","file":"smoothed-marker-tracker.152e2cc6.js","sourceRoot":"../../src","sourcesContent":["// This component flips the coordinate frame of an object as a convenience\n// It's mostly used to transform marker rotation to the rotation we perceive onscreen\n// (Instead of being Y-up oriented)\nAFRAME.registerComponent('smoothed-marker-tracker', {\n  schema: {\n    adjustedRotation: {\n      type: 'vec3',\n      default: { x: 0, y: 0, z: 0 }\n    }\n  },\n  init: function () {\n\n    this.el.object3D.isShown = false\n    // Add animations for events\n    this.el.setAttribute(\"animation__show\", \"property: opacity; from: 0.0; to: 1.0; dur: 500; startEvents: onShow; easing: easeOutCubic;\");\n    this.el.setAttribute(\"animation__hide\", \"property: opacity; from: 1.0; to: 0.0; dur: 500; startEvents: onHide; easing: easeOutCubic;\");\n\n  },\n  onMarkerPositionUpdate: function(event) {\n\n    // console.log(\"position update\")\n  },\n  onMarkerRotationUpdate: function(event) {\n    // console.log(\"rot update\")\n  },\n  onMarkerTrackingStarted: function(event) {\n    // console.log(\"tracking update\")\n    // this.el.object3D.isShown = true\n    this.el.object3D.visible = true\n    // this.el.emit('onShow', {}, true);\n  },\n  onMarkerTrackingEnded: function(event) {\n    console.log(\"tracking update\")\n    this.el.object3D.visible = false;\n    // this.el.object3D.isShown = false\n    // this.el.emit('onHide', {}, true);\n  },\n  update: function () {},\n  tick: function () {\n  },\n  remove: function () {},\n  pause: function () {},\n  play: function () {}\n});"]}