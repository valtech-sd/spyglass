{"version":3,"sources":["../samples/contentstack-integration/secrets.js","js/data_sources.js","components/tab-menu.js"],"names":["secrets","apiKey","environment","deliveryToken","data_sources","contentstack","personalized","getData","getStackData","$export","document","querySelector","GQL_URL","GQL_HEADERS","gqlQuery","rearrangeAPIResponse","response","newData","data","all_product","items","i","serums","length","entry","parseInt","product_name","split","contraindications","additional_contraindications","push","usage_frequency","usage_frequencyConnection","edges","map","item","node","title","marker_patt_urls","marker_fileConnection","url","product_image_urls","product_imagesConnection","ingredients","ingredient_list","ingredient_edges","ingredientsConnection","n","name","also_known_as","imageConnection","image_url","description","concentration","directions","instructions","text","step_instruction_text","console","log","sort","a","b","_id","productsByGraphQL","window","fetch","method","headers","body","JSON","stringify","query","then","json","other_product_images","cleanser","toner","moisturizer_empty","moisturizers","sunscreen","why","for_you","ratings","approval","friends_who_like","personal","positive","reviews","user","testimonial","AFRAME","registerComponent","schema","tabSpacing","type","default","init","tabElements","el","querySelectorAll","tabComponents","spacing","confirmedSelection","selectedIndex","self","forEach","tag","index","textTab","components","iconTab","tabComponent","tabWidth","getWidth","object3D","position","x","select","deselect","selectIndex","confirmIndex","confirm","setTimeout","emit","incrementSelectedIndex","numTabs","indexToSelect","decrementSelectedIndex","confirmSelectedIndex","saveReviewData","productID","positiveReview","serum","find","update","tick","remove","pause","play"],"mappings":"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","file":"tab-menu.41f7b7c1.js","sourceRoot":"../../src","sourcesContent":["const secrets = {\n  apiKey: 'blte63f7056be4da683',\n  environment: 'localhost-dev',\n  deliveryToken: 'cs01d945711b0bb626d33ad776',\n}\nexport default secrets;","import secrets from '../../samples/contentstack-integration/secrets';\n\nconst data_sources = {\n  contentstack: {},\n  personalized: {},\n  getData: () => 0\n}\n\nasync function getStackData() {\n  const $export = document.querySelector('#cleaned_output');\n\n  const GQL_URL = `https://graphql.contentstack.com/stacks/${secrets.apiKey}?environment=${secrets.environment}`\n  const GQL_HEADERS = {\n    'Content-Type': 'application/json',\n    'access_token': secrets.deliveryToken,\n  };\n  const gqlQuery = `{\n    all_product(where: {product_line: \"Serums\"}) {\n      items {\n        title\n        product_name\n        brand\n        product_line\n        upc\n        form\n        amount {\n          quantity\n          measurement\n        }\n        packaging {\n          type\n        }\n        rating\n        additional_contraindications\n        usage_frequencyConnection(limit:7) {\n          edges {\n            node {\n              ... on UsageTimeTags {\n                title\n              }\n            }\n          }\n        }\n        marker_fileConnection(limit: 3) {\n          edges {\n            node {\n              title\n              url\n            }\n          }\n        }\n        product_imagesConnection(limit: 1) {\n          edges {\n            node {\n              title\n              url\n            }\n          }\n        }\n        instructions {\n          step_instruction_text\n        }\n        ingredient_list {\n          concentration\n          ingredientsConnection {\n            edges {\n              node {\n                ... on Ingredient {\n                  title\n                  name\n                  also_known_as\n                  description\n                  imageConnection {\n                    edges {\n                      node {\n                        title\n                        url\n                      }\n                    }\n                  }\n                  contraindications\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }`;\n  function rearrangeAPIResponse(response) {\n    let newData = {};\n    if (response?.data?.all_product) {\n      newData = {'serums': [...response.data.all_product.items]};\n      for (let i = 0; i < newData.serums.length; i++) {\n          const entry = {\n          // Add an id (What serum no. is it?)\n          '_id': parseInt(newData.serums[i].product_name.split(' ')[2]),\n          ...newData.serums[i]\n        }\n        // Remove nesting of references\n        // ✔️ contraindications (see ingredients below)\n        entry.contraindications = []; \n        if (entry.additional_contraindications?.length) {\n          entry.contraindications.push(entry.additional_contraindications);\n        }\n        delete(entry.additional_contraindications);\n        // ✔️ usage frequency\n        entry.usage_frequency = entry.usage_frequencyConnection.edges.map((item) => item.node.title);\n        delete(entry.usage_frequencyConnection);\n        // ✔️ marker pattern\n        entry.marker_patt_urls = entry.marker_fileConnection.edges.map((item) => item.node.url);\n        delete(entry.marker_fileConnection);\n        // ✔️ product image\n        entry.product_image_urls = entry.product_imagesConnection.edges.map((item) => item.node.url);\n        delete(entry.product_imagesConnection);\n        // ✔️ ingredients\n        entry.ingredients = entry.ingredient_list.map((item) => {\n          const ingredient_edges = item.ingredientsConnection.edges;\n          if (ingredient_edges.length) {\n            // There will only be one ingredient in the ingredientsConnection\n            const n = {};\n            n.name = ingredient_edges[0].node.name;\n            n.also_known_as = ingredient_edges[0].node.also_known_as;\n            if ('edges' in ingredient_edges[0].node.imageConnection && \n                ingredient_edges[0].node.imageConnection.edges.length) {\n              n.image_url = ingredient_edges[0].node.imageConnection.edges[0].node.url;\n            }\n            n.description = ingredient_edges[0].node.description;\n            if (item.concentration) n.concentration = item.concentration;\n            // Add the contraindications \n            if (ingredient_edges[0].node.contraindications) {\n              entry.contraindications.push(ingredient_edges[0].node.contraindications);\n            }\n            return n;\n          } \n        });\n        delete(entry.ingredient_list);\n        // simplify usage instructions\n        entry.directions = entry.instructions.map((item) => {return {text: item.step_instruction_text}});\n        delete(entry.instructions);\n        newData.serums[i] = entry;\n      }\n    }\n    console.log(newData);\n    // Sort the serums\n    newData.serums.sort((a,b) => a._id - b._id);\n    return newData;\n  }\n\n  // Guidance here: https://graphql.org/learn/serving-over-http/#http-methods-headers-and-body\n  const productsByGraphQL = await window.fetch(\n    GQL_URL,\n    {\n      method: 'POST', \n      headers: GQL_HEADERS,\n      body: JSON.stringify({query: gqlQuery})\n    }\n    )\n  .then(response => response.json())\n  .then(data => rearrangeAPIResponse(data));\n\n  data_sources.contentstack = productsByGraphQL;\n}\n\n// This data would be stored in another database.\ndata_sources.personalized = {\n  other_product_images: {\n    cleanser: 'https://images.contentstack.io/v3/assets/blte63f7056be4da683/blt2768458962874adb/5f5d73c7ace172423d8845be/01_Cleanser_3.png',\n    toner: 'https://images.contentstack.io/v3/assets/blte63f7056be4da683/blt3b2f9c68cda139c8/5f5d73b82917074cd81a2925/02_Toner_3.png',\n    moisturizer_empty: 'https://images.contentstack.io/v3/assets/blte63f7056be4da683/blt879660a27aedbfec/5f5d73a665c9c14aec2fb9f7/04_Moisturizer_0.png',\n    moisturizers: [\n      'https://images.contentstack.io/v3/assets/blte63f7056be4da683/blta69fd32048fdecab/5f5d740674038f4956e098d8/04_Moisturizer_1.png',\n      'https://images.contentstack.io/v3/assets/blte63f7056be4da683/blt7e0ba1616f10fbd1/5f5d85e42917074cd81a2929/04_Moisturizer_7.png'\n    ],\n    sunscreen: 'https://images.contentstack.io/v3/assets/blte63f7056be4da683/blt80ab90086435bebe/5f5d739883eade441b6a6ae8/05_Sunscreen_0.png'\n  },\n  serums: [\n    {\n      _id: 1,\n      why: [\n        'Your goal is anti-aging.',\n        'Better than leading competitors\\' products.',\n        'Cheaper than leading competitors\\' products.',\n        'Sweet floral fragrance!'\n      ],\n      for_you: [\n        {\n          title: 'Conserve and save',\n          text: 'You\\'ve used Serum for 3 weeks with smoother skin? Consider increasing your concentration from 2% to 5% to increase cell turnover at an even faster rate.'\n        },\n        {\n          title: 'Shields up',\n          text: 'The UV index is super high today in your area! Make sure to apply sunscreen throughout the day after using this serum.'\n        }  \n      ],\n      \n      ratings: {\n        approval: 86,\n        friends_who_like: 6,\n        personal: {\n          //personal review field - positive or negative (potential for text feedback in future)\n          positive: null,\n        },\n        reviews: [\n          {\n            user: 'yourfriendjen',\n            title: 'THE BEST SERUM OUT THERE',\n            testimonial: '\"This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even. This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even. This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even. This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even. This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even. This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even. This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even. This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even. This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even.\"'\n          }\n        ]\n      }\n    },\n    {\n      _id: 2,\n      why: [\n        'Your goal is moisturizing.',\n        'Better than leading competitors\\' products.',\n        'Borage seed is a natural mellowing agent.',\n        'No allergens for you!'\n      ],\n      for_you: [\n        {\n          title: 'Feeling drier?',\n          text: 'Humidity forecasts are down for your location. Use a water-based solution to hydrate skin, then apply drops as needed.'\n        },\n        {\n          title: 'Relax naturally',\n          text: 'If you’re feeling a bit stressed out, know that Borage Seed Oil also creates a natural calming effect.'\n        }  \n      ],\n      ratings: {\n        approval: 47,\n        friends_who_like: 2,\n        personal: {\n          positive: null,\n        },\n        reviews: [\n          {\n            user: 'yourfriendjen',\n            title: 'THE BEST SERUM OUT THERE',\n            testimonial: '\"This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even.\"'\n          }\n        ]\n      }\n    },\n    {\n      _id: 3,\n      why: [\n        'Your goal is smoother skin.',\n        'Better than leading competitors\\' products.',\n        'Cheaper than leading competitors\\' products.',\n        'No allergens for you!'\n      ],\n      for_you: [\n        {\n          title: 'Next level',\n          text: 'Need more moisturizer? See our site to learn how to add our face oils into your routine to better hydrate your skin…'\n        },\n        {\n          title: 'Shields up',\n          text: 'The UV index is super high today in your area! Make sure to apply sunscreen throughout the day after using this serum.'\n        }  \n      ],\n      ratings: {\n        approval: 86,\n        friends_who_like: 6,\n        personal: {\n          positive: null,\n        },\n        reviews: [\n          {\n            user: 'yourfriendjen',\n            title: 'THE BEST SERUM OUT THERE',\n            testimonial: '\"This made such a huge difference with my combination-dry skin. My pore seem smaller, my skin brighter, and my complexion more even.\"'\n          }\n        ]\n      }\n    }\n  ],\n\n}\n\ndata_sources.getData = getStackData;\n// console.log('inside data_sources.js and ',data_sources);\n\nexport default data_sources;","// Register custom components before loading HTML\n// TODO: This should actually be a combo of a component and a system...!\n// We shouldn't do all the math in the component\nimport data_sources from '../js/data_sources';\n\nAFRAME.registerComponent('tab-menu', {\n  schema: {\n    tabSpacing: {\n      type: 'number',\n      default: 4.25\n    }\n  },\n  init: function () {\n\n    this.tabElements = this.el.querySelectorAll('[tabitem], [icon-tab-menu-item]');\n    this.tabComponents = []\n    this.spacing = this.data.tabSpacing\n    this.confirmedSelection = false;\n\n    this.selectedIndex = 0;\n    let self = this;\n\n    // Fetch components\n    this.tabElements.forEach( function(tag, index) {\n      let textTab = tag.components['tabitem'];\n      let iconTab = tag.components['icon-tab-menu-item'];\n      let tabComponent = (textTab) ? textTab : iconTab;\n\n      self.tabComponents.push(tabComponent);\n    });\n\n    this.tabComponents.forEach( function(tabComponent, index) {\n\n      let tabWidth = tabComponent.getWidth();\n      // console.log(tabComponent)\n      tabComponent.el.object3D.position.x = tabWidth * 0.5 + index * self.data.tabSpacing\n\n      if (index == self.selectedIndex) {\n        tabComponent.select();\n      } else {\n        tabComponent.deselect();\n      }\n    })\n  },\n  selectIndex: function(index) {\n\n    // If we've already confirmed, don't allow changing selection!\n    if (this.confirmedSelection) {\n      return;\n    }\n\n    let self = this\n    this.tabComponents.forEach( function(tabComponent, i) {\n      // let tabComponent = tabEl.components.tabitem\n      if (i == index) {\n        self.selectedIndex = index;\n        tabComponent.select();\n        console.log(\"selecting\", index)\n      } else {\n        tabComponent.deselect();\n      }\n    })\n  },\n  confirmIndex: function(index) {\n    if (this.tabComponents.length > 0) {\n      if (index >= 0 && index < this.tabComponents.length) {\n        this.tabComponents[index].confirm();\n        this.confirmedSelection = true;\n\n        // This should match confirmation animation duration (or a lil longer)\n        let self = this;\n        setTimeout(function() {\n          self.el.emit('tab-confirm');\n        }, 1000)\n      }\n    }\n  },\n  incrementSelectedIndex: function() {\n    let numTabs = this.tabComponents.length\n    if (numTabs > 0) {\n      let indexToSelect = (this.selectedIndex + 1) % numTabs;\n      this.selectIndex(indexToSelect);\n    }\n  },\n  decrementSelectedIndex: function() {\n    let numTabs = this.tabComponents.length\n    if (numTabs > 0) {\n      let indexToSelect = (this.selectedIndex == 0) ? numTabs - 1 : (this.selectedIndex - 1) % numTabs;\n      this.selectIndex(indexToSelect);\n    }\n  },\n  confirmSelectedIndex: function() {\n    this.confirmIndex(this.selectedIndex);\n  },\n  saveReviewData: function (productID) {\n    const positiveReview = this.selectedIndex === 0;\n    // find serum in the personalized data\n    const serum = data_sources.personalized.serums.find(serum => serum._id === productID);\n    // record review\n    if (serum) {\n      serum.ratings.personal.positive = positiveReview;\n      console.log(`Review for product ${productID} is recorded as ${positiveReview ? 'positive' : 'negative'}`);\n    }\n  },\n  update: function () {},\n  tick: function () {\n\n  },\n  remove: function () {},\n  pause: function () {},\n  play: function () {}\n});"]}